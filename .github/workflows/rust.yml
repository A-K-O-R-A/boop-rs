name: Rust build & fmt 

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Cache
      id: cache-cargo
      uses: actions/cache@v3
      env:
        cache-name: cache-cargo-crates
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: |
          ./target/
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/

        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
        # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
        restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Cargo Fmt
      run: cargo fmt --all -- --check
      
    - name: Build
      run: cargo build --verbose
      
#    - name: Run tests
#      run: cargo test --verbose
